{"version":3,"sources":["store/reducers/factReducer.js","store/reducers/index.js","store/actions/index.js","components/CategoryButton.jsx","components/Factoids.jsx","App.js","index.js"],"names":["initialState","isFetching","currentFact","categories","currentCategory","errors","combineReducers","factReducer","state","action","type","payload","CategoryButton","props","className","name","onClick","e","changeCategory","connect","fetchCategories","dispatch","axios","get","baseURL","then","res","data","catch","err","console","log","fetchFact","category","value","useEffect","map","item","idx","key","App","store","createStore","rootReducer","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"0TASaA,EAAe,CACxBC,YAAY,EACZC,YAAa,GACbC,WAAY,GACZC,gBAAiB,GACjBC,OAAQ,ICXGC,cAAgB,CAC3BC,YDauB,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCACzD,OAAOA,EAAOC,MAEV,IEjB4B,uBFkBxB,OAAO,2BACAF,GADP,IAEIP,YAAY,IAGpB,IEtB8B,yBFuB1B,OAAO,2BACAO,GADP,IAEIP,YAAY,EACZE,WAAYM,EAAOE,UAG3B,IEZwB,mBFapB,OAAO,2BACAH,GADP,IAEIP,YAAY,IAGpB,IEjB0B,qBFkBtB,OAAO,2BACAO,GADP,IAEIN,YAAaO,EAAOE,QACpBV,YAAY,IAGpB,IENuB,kBFOnB,OAAO,2BACAO,GADP,IAEIJ,gBAAiBK,EAAOE,UAGhC,QACI,OAAOH,MGtCJI,EAZQ,SAAAC,GAEnB,OACI,4BACIC,UAAWD,EAAME,OAASF,EAAMT,gBAAkB,SAAW,GAC7DY,QAAS,SAAAC,GAAC,OAAIJ,EAAMK,eAAeL,EAAME,QAExCF,EAAME,OC8DJI,eAVS,SAAAX,GACpB,MAAO,CACHP,WAAYO,EAAMD,YAAYN,WAC9BC,YAAaM,EAAMD,YAAYL,YAC/BC,WAAYK,EAAMD,YAAYJ,WAC9BC,gBAAiBI,EAAMD,YAAYH,mBAOvC,CAAEgB,gBFpEyB,WAC3B,OAAO,SAAAC,GACHA,EAAS,CAAEX,KALiB,yBAO5BY,IAAMC,IAAN,UAAaC,EAAb,gBACKC,MAAK,SAAAC,GACFL,EAAS,CAAEX,KARW,yBAQmBC,QAASe,EAAIC,UAEzDC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZR,EAAS,CAAEX,KAXW,gCEqEfsB,UFlDE,SAACC,GACtB,OAAO,SAAAZ,GACHA,EAAS,CAAEX,KALa,qBAOxBY,IAAMC,IAAN,UAAaC,EAAb,kBAA8BS,IACzBR,MAAK,SAAAC,GACFL,EAAS,CAAEX,KARO,qBAQmBC,QAASe,EAAIC,KAAKO,WAE1DN,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZR,EAAS,CAAEX,KAXO,4BEmDAQ,eFjCJ,SAAAe,GAC1B,OAAO,SAAAZ,GACHA,EAAS,CAAEX,KAAK,kBAAmBC,QAASsB,OE6BrCd,EAjEE,SAAAN,GAAU,IAGnBZ,EASAY,EATAZ,WACAC,EAQAW,EARAX,YACAC,EAOAU,EAPAV,WACAC,EAMAS,EANAT,gBAEAgB,GAIAP,EALAR,OAKAQ,EAJAO,iBACAY,EAGAnB,EAHAmB,UACAd,EAEAL,EAFAK,eAYJ,OARAiB,qBAAU,WACNf,MACD,CAACA,IAEJe,qBAAU,WACNH,EAA8B,KAApB5B,EAAyB,GAAzB,oBAA2CA,MACtD,CAACA,EAAiB4B,IAGjB,6BACI,qDACA,yBAAKlB,UAAU,iBAEPX,GACAA,EAAWiC,KAAI,SAACC,EAAMC,GAAP,OACX,kBAAC,EAAD,CACIC,IAAKD,EACLlC,gBAAiBA,EACjBc,eAAgBA,EAChBH,KAAMsB,QAIrBpC,GAAc,iDAEVA,GACDC,GACA,6BACI,2BAAIA,GACJ,4BACIY,UAAU,WACVE,QAAS,kBAAMgB,EAA8B,KAApB5B,EAAyB,GAAzB,oBAA2CA,MAFxE,uB,MClCLoC,MARf,WACE,OACE,yBAAK1B,UAAU,OACb,kBAAC,EAAD,QCSA2B,G,MAAQC,YAAYC,EAAaC,YAAgBC,IAAOC,OAGjDtB,EAAU,mCAEvBuB,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,OAGFQ,SAASC,eAAe,W","file":"static/js/main.94348a45.chunk.js","sourcesContent":["import { \r\n    FETCH_CATEGORY_START, \r\n    FETCH_CATEGORY_SUCCESS, \r\n    FETCH_FACT_START, \r\n    FETCH_FACT_SUCCESS,\r\n    CHANGE_CATEGORY\r\n\r\n} from \"../actions\"\r\n\r\nexport const initialState = {\r\n    isFetching: false,\r\n    currentFact: '',\r\n    categories: [],\r\n    currentCategory: '',\r\n    errors: ''\r\n}\r\n\r\nexport const factReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case FETCH_CATEGORY_START:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n\r\n        case FETCH_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                categories: action.payload\r\n            }\r\n\r\n        case FETCH_FACT_START:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n\r\n        case FETCH_FACT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentFact: action.payload,\r\n                isFetching: false\r\n            }\r\n\r\n        case CHANGE_CATEGORY:\r\n            return {\r\n                ...state,\r\n                currentCategory: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { factReducer } from './factReducer'\r\n\r\nexport default combineReducers({\r\n    factReducer\r\n})","import axios from 'axios'\r\nimport { baseURL } from '../../index'\r\n\r\nexport const FETCH_CATEGORY_START = 'FETCH_CATEGORY_START'\r\nexport const FETCH_CATEGORY_SUCCESS = 'FETCH_CATEGORY_SUCCESS'\r\nexport const FETCH_CATEGORY_FAILURE = 'FETCH_CATEGORY_FAILURE'\r\nexport const fetchCategories = () => {\r\n    return dispatch => {\r\n        dispatch({ type:FETCH_CATEGORY_START })\r\n\r\n        axios.get(`${baseURL}/categories`)\r\n            .then(res => {\r\n                dispatch({ type: FETCH_CATEGORY_SUCCESS, payload: res.data })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch({ type: FETCH_CATEGORY_FAILURE })\r\n            })\r\n    }\r\n}\r\n\r\nexport const FETCH_FACT_START = 'FETCH_FACT_START'\r\nexport const FETCH_FACT_SUCCESS = 'FETCH_FACT_SUCCESS'\r\nexport const FETCH_FACT_FAILURE = 'FETCH_FACT_FAILURE'\r\nexport const fetchFact = (category) => {\r\n    return dispatch => {\r\n        dispatch({ type: FETCH_FACT_START })\r\n\r\n        axios.get(`${baseURL}/random${category}`)\r\n            .then(res => {\r\n                dispatch({ type: FETCH_FACT_SUCCESS, payload: res.data.value })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch({ type: FETCH_FACT_FAILURE })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const CHANGE_CATEGORY = 'CHANGE_CATEGORY'\r\nexport const changeCategory = category => {\r\n    return dispatch => {\r\n        dispatch({ type:'CHANGE_CATEGORY', payload: category })\r\n    }\r\n}","import React from 'react'\r\n\r\n\r\nconst CategoryButton = props => {\r\n\r\n    return(\r\n        <button \r\n            className={props.name === props.currentCategory ? 'active' : ''}\r\n            onClick={e => props.changeCategory(props.name)}\r\n        >\r\n            {props.name}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CategoryButton","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchCategories, fetchFact, changeCategory } from '../store/actions'\r\n\r\n//Components\r\nimport CategoryButton from './CategoryButton'\r\n\r\nconst Factoids = props => {\r\n\r\n    const {\r\n        isFetching,\r\n        currentFact,\r\n        categories,\r\n        currentCategory,\r\n        errors,\r\n        fetchCategories,\r\n        fetchFact,\r\n        changeCategory\r\n\r\n    } = props\r\n\r\n    useEffect(() => {\r\n        fetchCategories()\r\n    }, [fetchCategories])\r\n\r\n    useEffect(() => {\r\n        fetchFact(currentCategory === '' ? '' : `?category=${currentCategory}`)\r\n    }, [currentCategory, fetchFact])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Chuck Norris Factoids</h1>\r\n            <div className=\"category-btns\">\r\n                {\r\n                    categories &&\r\n                    categories.map((item, idx) => \r\n                        <CategoryButton \r\n                            key={idx} \r\n                            currentCategory={currentCategory} \r\n                            changeCategory={changeCategory}\r\n                            name={item} \r\n                        />)\r\n                }\r\n            </div>\r\n            {isFetching && <h3>Fetching Data...</h3>}\r\n            {\r\n                !isFetching &&\r\n                currentFact &&\r\n                <div>\r\n                    <p>{currentFact}</p>\r\n                    <button \r\n                        className=\"new-fact\" \r\n                        onClick={() => fetchFact(currentCategory === '' ? '' : `?category=${currentCategory}`)}\r\n                    >\r\n                        Fetch New Fact\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isFetching: state.factReducer.isFetching,\r\n        currentFact: state.factReducer.currentFact,\r\n        categories: state.factReducer.categories,\r\n        currentCategory: state.factReducer.currentCategory\r\n    }\r\n\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchCategories, fetchFact, changeCategory })\r\n    (Factoids)","import React from 'react'\r\n\r\n//Components\r\nimport Factoids from './components/Factoids'\r\n\r\n//Styles\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Factoids />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n//Redux Dependencies\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\n\r\n//Middleware\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\n//Reducers\r\nimport rootReducer from './store/reducers'\r\n\r\n//Components\r\nimport App from './App'\r\n\r\n//Styles\r\nimport './index.css'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger))\r\n\r\n//API base URL\r\nexport const baseURL = 'https://api.chucknorris.io/jokes'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}